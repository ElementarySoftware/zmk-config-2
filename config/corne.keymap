/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  \   |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
//                    | GUI | LT(1, SPACE) | SPC |   | ENT | RSE  | CAPS |
                        bindings = <
   &kp TAB    &kp Q &kp W  &kp E  &kp R  &kp T   &kp Y  &kp U  &kp I     &kp O   &kp P    &kp BACKSLASH
   &kp LCTRL  &kp A &kp S  &kp D  &kp F  &kp G   &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT  &kp Z &kp X  &kp C  &kp V  &kp B   &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp RALT
                  &kp LGUI &lt NUMB SPACE &lt NAVI RET   &lt NAVI ESC &lt NUMB BSPC &kp CAPSLOCK
                        >;
                };
                
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// | SHFT |     |     |     |  {  |  [  |   |  ]  |     |     |     |     |   `  |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4               &kp N5            &kp N6                   &kp N7                     &kp N8           &kp N9           &kp N0     &kp BSPC
   &trans     &kp EXCL     &kp AT       &kp HASH     &kp DLLR             &kp PRCNT         &kp CARET                &kp AMPS                   &kp KP_MULTIPLY  &kp LPAR         &kp RPAR   &trans
   &kp LSHFT  &trans       &trans       &trans       &kp LEFT_BRACE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp RIGHT_BRACE            &trans           &trans           &trans     &kp GRAVE
                                        &kp LGUI     &trans               &mo ADJUST        &kp COMMA                &kp DOT                    &kp QUESTION
                        >;
                };
                
                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   | // TODO: Fix this row when &mkp is committed
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  ESC  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans    &trans  &trans    &trans    &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE &kp GRAVE
   &kp LSHFT &trans    &trans  &trans    &trans    &trans      &trans    &trans    &trans          &trans   &kp BSLH &kp TILDE
                                   &kp LGUI &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans      &trans          &trans         &trans          &trans          &trans            &trans &trans &trans &trans &trans &trans
   &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4      &trans &trans &trans &trans &trans &trans
   &trans      &trans          &trans         &trans          &trans          &trans            &trans &trans &trans &trans &trans &trans
                                   &trans &trans &trans   &trans &trans &trans
                        >;
                };
        };
};
